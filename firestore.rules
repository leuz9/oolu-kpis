rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return request.auth.token.isAdmin == true;
    }
    
    function hasRole(role) {
      return request.auth.token.role == role;
    }
    
    // Users collection rules
    match /users/{userId} {
      // Allow users to read their own profile
      // Allow admins to read all profiles
      // Allow any authenticated user to list users (needed for user assignment)
      allow read: if isSignedIn() && (isOwner(userId) || isAdmin() || true);
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (isOwner(userId) || isAdmin());
      allow delete: if isSignedIn() && isAdmin();
    }

    // Settings collection rules
    match /settings/{userId} {
      allow read: if isSignedIn() && (isOwner(userId) || isAdmin());
      allow write: if isSignedIn() && (isOwner(userId) || isAdmin());
    }

    // Team collection rules
    match /team/{memberId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && isAdmin();
    }

    // Departments collection rules
    match /departments/{departmentId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && isAdmin();
    }

    // Roles collection rules
    match /roles/{roleId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && isAdmin();
    }

    // Objectives collection rules
    match /objectives/{objectiveId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (
        // Allow update if user is admin
        isAdmin() ||
        // Allow update if user is a contributor
        request.auth.uid in resource.data.contributors ||
        // Allow update if user is adding themselves as a contributor
        request.resource.data.contributors.hasAll(resource.data.contributors)
      );
      allow delete: if isSignedIn() && isAdmin();
    }

    // KPIs collection rules
    match /kpis/{kpiId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (
        isAdmin() ||
        resource.data.owner == request.auth.uid ||
        request.auth.uid in get(/databases/$(database)/documents/objectives/$(resource.data.objectiveIds[0])).data.contributors
      );
      allow delete: if isSignedIn() && isAdmin();
    }
  }
}